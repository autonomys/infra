server {
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name archive.subspace.network;

    location / {
        try_files $uri $uri/ @backend;
    }

    location @backend {
        proxy_pass http://127.0.0.1:4444;
    }

    location /api {
        proxy_buffering off;
        proxy_pass http://127.0.0.1:8888/graphql;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        include /etc/nginx/cors-settings.conf;
    }

    location /graphql {
        proxy_buffering off;
        proxy_pass http://127.0.0.1:4444/graphql;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        include /etc/nginx/cors-settings.conf;
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/archive.subspace.network/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/archive.subspace.network/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = archive.subspace.network) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;

    server_name archive.subspace.network;
    return 404; # managed by Certbot
}
