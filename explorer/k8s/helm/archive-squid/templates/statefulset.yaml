apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "archive-squid.fullname" . }}-app
  namespace: {{ .Values.namespace | quote }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  minReadySeconds: 5
  serviceName: {{ include "archive-squid.fullname" . }}-app
  selector:
    matchLabels:
      app: {{ include "archive-squid.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "archive-squid.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "archive-squid.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: postgres
          image: postgres:16
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          ports:
            - name: db
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: POSTGRES_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: {{ include "archive-squid.fullname" . }}-data
            - mountPath: "/var/lib/postgresql/postgres.conf"
              name: config
              subPath: postgres.conf
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
                - -h
                - 127.0.0.1
                - -p
                - "5432"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
                - -h
                - 127.0.0.1
                - -p
                - "5432"
            initialDelaySeconds: 5
            periodSeconds: 10

        - name: ingest
          image: "{{ .Values.image_ingest.repository }}:{{ .Values.image_ingest.tag | default .Chart.AppVersion }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: ingest
              containerPort: 8000
              protocol: TCP
          command:
            - "-e"
            - "ws://127.0.0.1:9944"
            - "-c"
            - "10"
            - "--prom-port"
            - "9090"
            - "--out"
            - "postgres://{{ .Values.postgres.postgresUser }}:{{ .Values.postgres.postgresPassword}}@127.0.0.1:{{ .Values.postgres.postgresPort }}/{{ .Values.postgres.postgresDatabase }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: 0
          volumeMounts:
            - mountPath: "/var/ingest"
              name: {{ include "archive-squid.fullname" . }}-data
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

        - name: node
          image: {{ .Values.image_node.repository }}:{{ .Values.image_node.tag | default .Chart.AppVersion }}
          command:
            - "--chain"
            - "{{ .Values.networkName }}"
            - "--base-path"
            - "/var/subspace"
            - "--state-pruning"
            - "archive"
            - "--blocks-pruning"
            - "archive"
            - "--listen-on"
            - "/ip4/0.0.0.0/tcp/30333"
            - "--dsn-external-address"
            - "/ip4/{{ .Values.externalIP }}/tcp/30433"
            - "--rpc-cors"
            - "all"
            - "--rpc-methods"
            - "unsafe"
            - "--rpc-listen-on"
            - "127.0.0.1:9944"
            - "--no-private-ipv4"
            - "--name"
            - "{{ .Values.nodeName }}"
          volumeMounts:
            - mountPath: /var/subspace
              name: {{ include "archive-squid.fullname" . }}-data
          ports:
            - containerPort: 30333
              protocol: TCP
            - containerPort: 30433
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

        - name: gateway
          image: subsquid/substrate-gateway:firesquid
          env:
            - name: RUST_LOG
              value: "substrate_gateway=info,actix_server=info"
          command:
            - "--database-url"
            - "postgres://{{ .Values.postgres.postgresUser }}:{{ .Values.postgres.postgresPassword }}@127.0.0.1:{{ .Values.postgres.postgresPort }}/{{ .Values.postgres.postgresDatabase }}"
            - "--database-max-connections"
            - "6"
            - "--scan-start-value"
            - "20"
            - "--scan-max-value"
            - "20000"
          ports:
            - containerPort: 8000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /var/lib/substrate-gateway
              name: {{ include "archive-squid.fullname" . }}-data

        - name: explorer
          image: subsquid/substrate-explorer:firesquid
          env:
            - name: DB_TYPE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: DB_TYPE
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-postgres-secret
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-postgres-secret
                  key: DB_PASS
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: "/var/archive"
              name: {{ include "archive-squid.fullname" . }}-data

      imagePullSecrets:
        {{- with .Values.imagePullSecrets }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        - name:
          persistentVolumeClaim:
            claimName: {{ include "archive-squid.fullname" . }}-data-pvc
        - name: config
          configMap:
            name: {{ include "archive-squid.fullname" . }}-postgres-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
