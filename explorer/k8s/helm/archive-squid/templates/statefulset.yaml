apiVersion: apps/v1
kind: Statefulset
metadata:
  name: {{ include "archive-squid.fullname" . }}-app
  namespace: {{ .Values.namespace}}
  labels:
    {{- include "archive-squid.labels" . | nindent 4 }}
    app.kubernetes.io/component: "archive"
    app.kubernetes.io/part-of: "squid-archive"
    app.kubernetes.io/arch: {{.Values.arch}}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "archive-squid.selectorLabels" . | nindent 6 }} # has to match .spec.template.metadata.labels
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "archive-squid.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "archive-squid.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 10
      containers:
      - name: postgres
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: postgres:16
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
          - mountPath: "/var/lib/postgresql/data"
            name: {{ include "archive-squid.fullname" . }}-data
          - mountPath: "/var/lib/postgresql/postgres.conf"
            name: {{ include "archive-squid.fullname" . }}-postgres-config
            subPath: postgres.conf
        ports:
          - name: db
            containerPort: 5432
            protocol: TCP
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: POSTGRES_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-postgres-secret
                  key: POSTGRES_PASSWORD
        livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 6
            successThreshold: 1
            timeoutSeconds: 5
        readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5

      - name: node
        image: "{{ .Values.image_node.repository }}:{{ .Values.image_node.tag | default .Chart.AppVersion }}"
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
          - mountPath: "/var/subspace"
            name: archive-data
        env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: DB_HOST
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-migration-secret
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-migration-secret
                  key: DB_PASS

      - name: ingest
        image: "{{ .Values.image_ingest.repository }}:{{ .Values.image_ingest.tag | default .Chart.AppVersion }}"
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: ingest
            containerPort: 3000
            protocol: TCP
        command:
              - -e ws://node:9944
              - -c 10
              - --prom-port 9090
              - --out postgres://postgres:postgres@db:5432/squid-archive
        resources:
        {{- toYaml .Values.resources | nindent 12 }}
        env:
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: DB_HONODE_TLS_REJECT_UNAUTHORIZEDST

      - name: archive
        image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: archive
            containerPort: 3000
            protocol: TCP
        env:
            - name: DB_TYPE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: DB_TYPE
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: DB_HOST
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-configmap
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-migration-secret
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "archive-squid.fullname" . }}-migration-secret
                  key: DB_PASS
        # livenessProbe:
        #     httpGet:
        #       path: /graphql
        #       port: 4350
        #     initialDelaySeconds: 5
        #     periodSeconds: 10
        #     timeoutSeconds: 5
        #     successThreshold: 1
        #     failureThreshold: 3
        livenessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 30
        readinessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 6
            periodSeconds: 30
        resources:
          {{- toYaml .Values.resources | nindent 12 }}

      volumes:
        - name: {{ include "archive-squid.fullname" . }}-data
          persistentVolumeClaim:
            claimName: {{ include "archive-squid.fullname" . }}-data-pvc
        - name: {{ include "archive-squid.fullname" . }}-postgres-config
          configMap:
            name: {{ include "archive-squid.fullname" . }}-postgres-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
