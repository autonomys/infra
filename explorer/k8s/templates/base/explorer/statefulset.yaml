apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: explorer-app
  namespace: explorer-network
  labels:
    app.kubernetes.io/name: "squid-blockexplorer"
    app.kubernetes.io/instance: "squid-blockexplorer"
    app.kubernetes.io/version: "gemini-3h"
    app.kubernetes.io/component: "explorer"
    app.kubernetes.io/part-of: "squid-explorer"
    app.kubernetes.io/managed-by: "kubectl"
    app.kubernetes.io/arch: "x86_64"
spec:
  selector:
    matchLabels:
      app: explorer-app # has to match .spec.template.metadata.labels
  serviceName: archive-app-svc
  replicas: 1 # by default is 1
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations: {}
      labels:
        app: explorer-app # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      imagePullSecrets: []
      serviceAccountName: ""
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: postgres
          image: postgres:14
          securityContext:
            allowPrivilegeEscalation: false
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: explorer-data
            - mountPath: "/var/lib/postgresql/postgres.conf"
              name: explorer-postgres-config
              subPath: postgres.conf
          ports:
            - name: db
              containerPort: 5432
              protocol: TCP
          resources:
            requests:
              cpu: 2
              memory: 200Mi
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_PASSWORD
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 6
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5

        - name: run-migrations
          image: ghcr.io/subspace/blockexplorer-processor:latest
          securityContext:
            allowPrivilegeEscalation: false
          imagePullPolicy: Always
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DB_HOST
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: DB_PASS

        - name: processor
          image: ghcr.io/subspace/blockexplorer-processor:latest
          securityContext:
            allowPrivilegeEscalation: false
          imagePullPolicy: Always
          ports:
            - name: processor
              containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: 2
              memory: 200Mi
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DB_HOST
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: DB_PASS
          livenessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 6
            periodSeconds: 30

        - name: graphql
          image: ghcr.io/subspace/blockexplorer-api-server:latest
          securityContext:
            allowPrivilegeEscalation: false
          imagePullPolicy: Always
          ports:
            - name: graphql
              containerPort: 4000
              protocol: TCP
          # livenessProbe:
          #     httpGet:
          #       path: /graphql
          #       port: 4000
          #     initialDelaySeconds: 5
          #     periodSeconds: 10
          #     timeoutSeconds: 5
          #     successThreshold: 1
          #     failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: 4000
            initialDelaySeconds: 5
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: 4000
            initialDelaySeconds: 6
            periodSeconds: 30
          resources:
            requests:
              cpu: 1
              memory: 100Mi
      volumes:
        - name: explorer-data
          persistentVolumeClaim:
            claimName: explorer-data-pvc
        - name: explorer-postgres-config
          configMap:
            name: explorer-postgres-configmap
      #nodeSelector: {}
      #affinity: {}
      nodeSelector:
        subspace.network/role: explorer-squid-node
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: subspace.network/role
                    operator: In
                    values:
                      - explorer-squid-node
          #preferredDuringSchedulingIgnoredDuringExecution:
          #- weight: 1
          #  preference:
          #    matchExpressions:
          #    - key: node-label-key
          #      operator: In
          #      values:
          #      - node-label-value
      #tolerations: []
      tolerations:
        - key: "subspace.network/role"
          operator: "Equal"
          value: "explorer-squid-node"
          effect: "NoSchedule"
      restartPolicy: Always
