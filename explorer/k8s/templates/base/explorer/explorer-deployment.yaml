apiVersion: apps/v1
kind: Deployment
metadata:
  name: explorer-app
  namespace: explorer-network
  labels:
    app.kubernetes.io/name: "squid-blockexplorer"
    app.kubernetes.io/instance: "squid-blockexplorer"
    app.kubernetes.io/version: "gemini-3d"
    app.kubernetes.io/component: "explorer"
    app.kubernetes.io/part-of: "squid-explorer"
    app.kubernetes.io/managed-by: "kubectl"
    app.kubernetes.io/arch: "x86_64" 
spec:
  selector:
    matchLabels:
      app: explorer-app # has to match .spec.template.metadata.labels
  replicas: 1
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  template:
    metadata:
      annotations: {}
      labels:
        app: explorer-app # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      imagePullSecrets: []
      serviceAccountName: ""
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: nginx
        image: nginx:latest
        securityContext:
          allowPrivilegeEscalation: false
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: "/etc/nginx/nginx.conf"
            name: explorer-nginx-config
            subPath: nginx.conf
          - mountPath: "/etc/nginx/proxy.conf"
            name: explorer-nginx-config
            subPath: proxy.conf
        ports:
          - name: nginx
            containerPort: 80
            protocol: TCP
        # livenessProbe:
        #     httpGet:
        #       path: /health
        #       port: 80
        #     initialDelaySeconds: 15
        #     periodSeconds: 15
        #     timeoutSeconds: 5
        #     successThreshold: 1
        #     failureThreshold: 3
        livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
        readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 6
            periodSeconds: 10

      - name: postgres
        image: postgres:14
        securityContext:
          allowPrivilegeEscalation: false
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: "/var/lib/postgresql/data"
            name: explorer-data
          - mountPath: "/var/lib/postgresql/postgres.conf"
            name: explorer-postgres-config
            subPath: postgres.conf
        ports:
          - name: db
            containerPort: 5432
            protocol: TCP
        resources:
          requests:
            cpu: 2
            memory: 4000Mi
          limits:
            cpu: 8
            memory: 16000Mi
        env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_PASSWORD
        livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 6
            successThreshold: 1
            timeoutSeconds: 5
        readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5

      - name: run-migrations
        image: ghcr.io/subspace/blockexplorer-processor:latest
        securityContext:
          allowPrivilegeEscalation: false
        imagePullPolicy: Always
        env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DB_HOST
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: DB_PASS

      - name: processor
        image: ghcr.io/subspace/blockexplorer-processor:latest
        securityContext:
          allowPrivilegeEscalation: false
        imagePullPolicy: Always
        ports:
          - name: processor
            containerPort: 3000
            protocol: TCP
        resources:
          requests:
            cpu: 2
            memory: 4000Mi
          limits:
            cpu: 8
            memory: 16000Mi
        env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DB_HOST
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: DB_PASS
        livenessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 30
        readinessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 6
            periodSeconds: 30

      - name: graphql
        image: ghcr.io/subspace/blockexplorer-api-server:latest
        securityContext:
          allowPrivilegeEscalation: false
        imagePullPolicy: Always
        ports:
          - name: graphql
            containerPort: 4000
            protocol: TCP
        # livenessProbe:
        #     httpGet:
        #       path: /graphql
        #       port: 4000
        #     initialDelaySeconds: 5
        #     periodSeconds: 10
        #     timeoutSeconds: 5
        #     successThreshold: 1
        #     failureThreshold: 3
        livenessProbe:
            tcpSocket:
              port: 4000
            initialDelaySeconds: 5
            periodSeconds: 30
        readinessProbe:
            tcpSocket:
              port: 4000
            initialDelaySeconds: 6
            periodSeconds: 30

      - name: datadog
        image: datadog/agent
        securityContext:
          allowPrivilegeEscalation: false
        imagePullPolicy: Always
        volumeMounts:
          - name: dockersocket
            mountPath: /var/run/docker.sock
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
        env:
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: DD_API_KEY
            - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
            - name: DD_LOGS_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DD_LOGS_ENABLED
            - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
            - name: DD_CONTAINER_EXCLUDE
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: DD_CONTAINER_EXCLUDE

      - name: pg-health-check
        image: ghcr.io/subspace/health-check:latest
        securityContext:
          allowPrivilegeEscalation: false
        imagePullPolicy: Always
        ports:
          - name: pghealth
            containerPort: 8080
            protocol: TCP
        env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: POSTGRES_PASSWORD
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: archive-configmap
                  key: HEALTH_CHECK PORT
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: HEALTH_AUTH_SECRET
        livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 30
        readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 6
            periodSeconds: 30

      - name: prom-health-check
        image: ghcr.io/subspace/health-check:latest
        securityContext:
          allowPrivilegeEscalation: false
        imagePullPolicy: Always
        ports:
          - name: processorhealth
            containerPort: 7070
            protocol: TCP
        env:
            - name: PROCESSOR_HEALTH_HOST
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: PROCESSOR_HEALTH_HOST
            - name: PROCESSOR_HEALTH_PORT
              valueFrom:
                configMapKeyRef:
                  name: explorer-configmap
                  key: PROCESSOR_HEALTH_PORT
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: explorer-configmap
                  key: HEALTH_AUTH_SECRET
        livenessProbe:
            tcpSocket:
              port: 7070
            initialDelaySeconds: 5
            periodSeconds: 30
        readinessProbe:
            tcpSocket:
              port: 7070
            initialDelaySeconds: 6
            periodSeconds: 30

      volumes:
        - name: explorer-data
          persistentVolumeClaim:
            claimName: explorer-data-pvc
        - hostPath:
            path: /var/run/docker.sock
          name: dockersocket
        - hostPath:
            path: /proc
          name: procdir
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroups
        - name: explorer-proxy-config
          configMap:
            name: explorer-proxy-configmap
        - name: explorer-postgres-config
          configMap:
            name: explorer-postgres-configmap

      #nodeSelector: {}
      #affinity: {}
      nodeSelector:
        subspace.network/role: explorer-squid-node
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: subspace.network/role
                operator: In
                values:
                - explorer-squid-node
          #preferredDuringSchedulingIgnoredDuringExecution:
          #- weight: 1
          #  preference:
          #    matchExpressions:
          #    - key: node-label-key
          #      operator: In
          #      values:
          #      - node-label-value
      #tolerations: []
      tolerations:
      - key: "subspace.network/role"
        operator: "Equal"
        value: "explorer-squid-node"
        effect: "NoSchedule"
      restartPolicy: Always
